http2采用二进制格式而非文本
http2才用了报文压缩,http2降低了开销


http1.0 每次请求都必须新建一次连接,必须通过TCP的三次握手才能开始传输数据,连接结束后还要经历四次挥手
    缺点:1.连接无法复用 每次请求都必须建立一个TCP连接 耗时耗力
         2.队头阻塞,下一个请求必须在上一个请求响应到达后发送,如果某请求一直不到达,那么下一个请求就一直不发送
        因此HTTP1.1增加了持久连接的方法

http1.1 默认支持场长连接 就是在一个TCP连接上可以传送多个HTTP请求和响应,减少了建立和关闭连接的消耗和延迟
        特点: 支持长连接 用过Keep-Alive保持HTTP连接不断
              并发连接：对一个域名的请求允许分配多个长连接（缓解了长连接中的「队头阻塞」问题）
              加入缓存处理(新字段cache-control)
              增加了Host字段,实现了一台Web服务器上可以同一个ip地址和端口号上使用不同的主机名来创建多个虚拟web站点
              增加了put、delete等请求方法

        缺点: 无状态特性:上一次请求求证了用户名和密码,而下一次请求服务器并不知道与上一条请求有何关联
              不安全性: 传输内容没有加密
              HTTP1.1对带宽的利用率并不理想 
        因为  1.TCP的慢启动 
              2.同时开启了多条TCP连接,那么这些连接会竞争固定的带宽 
              3.队头阻塞
              浏览器可以一次性发出多个请求（同个域名、同一条 TCP 链接）
              但 pipeling 要求返回是按序的 那么后面的请求即使服务器已经处理完，仍会等待前面的请求处理完才开始按序返回。

HTTP/2  HTTP/2 默认不再使用 ASCII 编码传输，而是改为二进制数据，来提升传输效率。
        
        客户端在发送请求时会将每个请求的内容封装成不同的带有编号的二进制帧
            然后将这些帧同时发送给服务端。服务端接收到数据之后，会将相同编号的帧合并为完整的请求信息。
                同样，服务端返回结果、客户端接收结果也遵循这个帧的拆分与组合的过程。

        有了二进制分帧后，对于同一个域，客户端只需要与服务端建立一个连接即可完成通信需求，
            这种利用一个连接来发送多个请求的方式称为多路复用。每一条路都被称为一个 流
        
        多路复用： 废弃了 HTTP/1.1 中的管道 同一个TCP连接里面 客户端和服务器可以同时发送多个请求和多个响应
                    并且不用按照顺序来。由于服务器不用按顺序来处理响应 所以避免了“队头堵塞”的问题。