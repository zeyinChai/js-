wepack中loader和plugin的区别

    1 . loader运行在打包文件之前（loader为在模块加载时的预处理文件）  
    2.  plugins在整个编译周期都起作用。

loader：

loader从字面的意思理解，是 加载 的意思。
    由于webpack本身只能打包commonjs规范的js文件,所以,针对css,图片等格式的文件没法打包,就需要引入第三方的模块进行打包。
    loader虽然是扩展了 webpack ，但是它只专注于转化文件（transform）这一个领域，完成压缩，打包，语言翻译。
    loader是运行在NodeJS中。仅仅只是为了打包

    如：css-loader和style-loader模块是为了打包css的
    babel-loader和babel-core模块时为了把ES6的代码转成ES5
    url-loader和file-loader是把图片进行打包的。

plugin:
     plugin也是为了扩展webpack的功能，但是 plugin 是作用于webpack本身上的。
     比如.a{color:red} .b{color:red} .c{color:red} => plugin后 .a.b.c{color:red}











