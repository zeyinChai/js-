浏览器缓存主要有两类：协商缓存和强缓存。
1.强缓存：不会向服务器发送请求，直接从缓存中读取资源，状态码是200;
2.协商缓存：向服务器发送请求，服务器会根据这个请求的Request headers的一些参数来判断是否命中协商缓存，
            如果命中，从缓存中读取数据，返回304状态码

两者共同点：都是从客户端缓存中读取资源；
区别：强缓存不会发请求，协商缓存会发请求。


起初 当浏览器发起一个资源请求时，服务器会返回一个Expires 是个过期时间的日子
        当浏览器后续请求就会判断是否在Exipres过期时间内 如果在就从本地拿缓存
            但是有个问题 如果Exipres是服务器返回的 比对的确实客户端 如果服务器和客户端时间不一致就出问题了

后来 http1.1引入了cache-control 与expires的作用是一致的 
                    但是不同的是 才用的是过期时长 Cache-control:max-age=3600
        当浏览器后续请求就会判断是否在Cache-control过期时间内 如果在就从本地拿缓存

    很多请求发向服务器 服务器感知缓存过期了压力太大
        缓存又被分为了强缓存和协商缓存
    强缓存：在缓存没有过期的时候浏览器可以直接使用缓存中拿数据  
    协商缓存：当缓存过期后 浏览器需要咨询服务器 服务器就会返回可以使用或者不可以使用
                服务器在响应头增加Last-modified(服务器资源的最后修改时间)
                    浏览器在每次请求的时候都会带上一次返回的Last-modified(服务器资源的最后修改时间)
                        服务器拿到这个值跟服务器当前资源的最后修改时间作对比
                        如果比对的结果没变化 就返回304可以从本地拿资源

            因为Last-modified是秒级别的 如果在1秒内发生变化 那么服务器是感知都不到

        Etag应允而生   

最后    当浏览器发起一个资源请求时，服务器返回一个文件唯一标识Etag
            然后浏览器每次请求都会带上If-None-Match字段,值就是Etag的值
            服务器拿到这个值和当前文件的Etag对比 如果没发生变化就返回304


